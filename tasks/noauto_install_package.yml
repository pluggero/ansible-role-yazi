---
- name: Install Yazi OS-specifically via package
  block:
    - name: Import installed yazi version check
      ansible.builtin.include_tasks: noauto_check_installed_version.yml
      when: yazi_installed_version is not defined

    - name: Check yazi pkg mgr version
      ansible.builtin.include_tasks: "{{ task_file }}"
      with_first_found:
        - "noauto_check_pkg_mgr_version_{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
        - "noauto_check_pkg_mgr_version_{{ ansible_os_family }}-{{ ansible_distribution_major_version }}.yml"
        - "noauto_check_pkg_mgr_version_{{ ansible_distribution }}.yml"
        - "noauto_check_pkg_mgr_version_{{ ansible_os_family }}.yml"
        - "noauto_check_pkg_mgr_version_{{ ansible_lsb.id }}.yml"
      loop_control:
        loop_var: task_file

    - name: Force install if the version numbers do not match
      ansible.builtin.set_fact:
        yazi_force_install: true
      when:
        - yazi_installed_version is defined
        - yazi_pkg_mgr_version is defined
        - yazi_installed_version !=  yazi_pkg_mgr_version

    - name: Install yazi package
      when: yazi_installed_version is not defined or yazi_force_install
      block:
        - name: Uninstall current yazi installation
          ansible.builtin.include_tasks: noauto_uninstall.yml
          when: yazi_installed_version is defined and yazi_installed_version != ""

        - name: Install yazi OS-specifically via package
          ansible.builtin.include_tasks: "{{ task_file }}"
          with_first_found:
            - "noauto_install_{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
            - "noauto_install_{{ ansible_os_family }}-{{ ansible_distribution_major_version }}.yml"
            - "noauto_install_{{ ansible_distribution }}.yml"
            - "noauto_install_{{ ansible_os_family }}.yml"
            - "noauto_install_{{ ansible_lsb.id }}.yml"
          loop_control:
            loop_var: task_file
